build {
  sources = ["source.azure-arm.windows"]
  
  provisioner "powershell" {
    script = "files/winrm.ps1"
  }

  provisioner "powershell" {
    inline = ["ipconfig /renew"]
  }

  # provisioner "powershell" {
  #   inline = ["Add-WindowsFeature Web-Server", "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit", "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"]
  # }
   provisioner "ansible" {
    playbook_file = "./common.yml"
    use_proxy =  false
    groups = ["windows"]
    extra_arguments = ["-e","ansible_winrm_server_cert_validation=ignore","-e","ansible_user=packer","-e","ansible_password=${build.Password}","-v"]
  }
   post-processor "manifest" {
    output     = "./manifest.json"
    strip_path = true
    custom_data = {
      managed_image_resource_group    = "workshopdemo"
      snapshot_name             = "${local.snapshot_name}"
      build_pass                = "${build.Password}"
    }
  }
}